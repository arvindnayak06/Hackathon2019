package org.hackathon.cardless.transaction.api;

import java.net.MalformedURLException;

import javax.inject.Inject;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.log4j.Logger;
import org.hackathon.cardless.transaction.model.Transaction;
import org.hackathon.cardless.transaction.service.CloudantQueryService;


@Path("/transaction")
public class TransactionEndpoint {
	@Inject
	private CloudantQueryService cqs;
	private Response response;
	final static Logger logger = Logger.getLogger(TransactionEndpoint.class);

	@POST
	@Path("/cardlesscash")
    @Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Response saveTx(Transaction tx) {
		
		logger.info("TransactionEndpoint. Inside saveTx method. invoking saveTxToDb method");
		try {
			boolean isSuccess = cqs.savetoTxDb(tx);
			logger.info("is success: "+isSuccess);
			if(isSuccess) {
				logger.info("save a success");
				response = Response.status(Response.Status.CREATED).type(MediaType.APPLICATION_JSON).build();
			}else {
				logger.info("save not a success");
				response = Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.APPLICATION_JSON).entity("{\"error\":\"Unable to save to DB.\"}").build();
			}
		}catch(MalformedURLException e){
			logger.info("MalformedURLException");
			// can be thrown by cloudant client
			response = Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.APPLICATION_JSON).entity("{\"error\":\"malformed URL exception while connecting to cloudant.\"}").build();
		}catch(Exception e) {
			logger.info("General catch all exception: "+e);
			response = Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.APPLICATION_JSON).entity("{\"error\":\"General exception\"}").build();
			
		}
		return response;
	}
	
	/*
	 * This is invoked from the orchestrator service while withdrawing cash
	 */
	@GET
	@Path("/cardlesscash/query")
    @Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Response getTx(String mobileNo,String bankToken){
		logger.info("TransactionEndpoint. Inside getTx method. invoking getFromTxDb method");
		try {
			cqs.getFromTxDb(mobileNo,bankToken);
		}catch(MalformedURLException e) {
			logger.info("MalformedURLException");
			// can be thrown by cloudant client
			response = Response.status(Response.Status.INTERNAL_SERVER_ERROR).type(MediaType.APPLICATION_JSON).entity("{\"error\":\"malformed URL exception while connecting to cloudant.\"}").build();
		}
		return response;
	}
}
