package org.hackathon.cardless.transaction.api;

import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

import org.apache.log4j.Logger;
import org.hackathon.cardless.transaction.model.Transaction;
import org.hackathon.cardless.transaction.model.TransactionReq;
import org.hackathon.cardless.transaction.service.TransactionService;

@Path("/transaction")
public class TransactionEndpoint {
	
	private TransactionService txSrv;
	private Response response;
	final static Logger logger = Logger.getLogger(TransactionEndpoint.class);

	@POST
	@Path("/cardlesscash")
    @Produces(MediaType.APPLICATION_JSON)
	@Consumes(MediaType.APPLICATION_JSON)
	public Response saveTx(Transaction tx) {
		
		logger.info("TransactionEndpoint. Inside saveTx method. invoking saveTxToDb method");
		try {
			boolean isSuccess = txSrv.saveTxToDb(tx);
			logger.info("is success: "+isSuccess);
			if(isSuccess) {
				logger.info("save a success");
				response = Response.status(Response.Status.SUCCESS).type(MediaType.APPLICATION_JSON).build();
			}
		}catch(Exception e){
			
		}
		return response;
	}
}
